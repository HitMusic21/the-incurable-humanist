openapi: 3.0.3
info:
  title: The Incurable Humanist - Auth API
  description: Authentication endpoints for readers and author
  version: 1.0.0

paths:
  /auth/register:
    post:
      summary: Register new reader account
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, full_name]
              properties:
                email:
                  type: string
                  format: email
                  example: "reader@example.com"
                password:
                  type: string
                  minLength: 8
                  example: "SecurePass123"
                full_name:
                  type: string
                  maxLength: 255
                  example: "Jane Doe"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid input or email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Login with email and password
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: "bearer"
                  user:
                    $ref: '#/components/schemas/UserResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/me:
    get:
      summary: Get current user info
      tags: [Authentication]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Current user details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Not authenticated

  /auth/reset-password:
    post:
      summary: Request password reset email
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email]
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Reset email sent (if email exists)
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Password reset email sent"

  /auth/reset-password/{token}:
    post:
      summary: Reset password with token
      tags: [Authentication]
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [new_password]
              properties:
                new_password:
                  type: string
                  minLength: 8
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired token

components:
  schemas:
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        full_name:
          type: string
        is_author:
          type: boolean
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        detail:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
